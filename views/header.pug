nav
	.nav-wrapper
		script(src='https://code.jquery.com/jquery-2.1.1.min.js', type="text/javascript" )
		script(src='/materialize/js/materialize.min.js', type="text/javascript" )
		script(src='/js/index.js', type="text/javascript" )
		script(src='/js/splitting.js', type="text/javascript" )
		script(src='/js/tester2.js', type="text/javascript" )
		p Shapped Pattern generator
.row
	form( action="#") 
		.col.s12.m5
			.row 
				.file-field.input-field
					.btn
						span File For Pattern
						input( type="file")
					.file-path-wrapper
						input(
							id="inputPattern"
							class="file-path validate"
							type="text"
							)

	form( action="#") 
		.col.s12.m5
			.row 
				.file-field.input-field
					.btn
						span File For form
						input( type="file")
					.file-path-wrapper
						input(
							id="inputForm"
							class="file-path validate"
							type="text"
							)
	.col.s12.m2
		a(id="validate", class="waves-effect waves-light btn", href="#") OK
	
	tr
		td
			svg(id="shape")
		td
			table
				tr
					a(id="generate", class="waves-effect waves-light btn", href="#") Generate
					a(id="download", class="waves-effect waves-light btn", href="#") Telecharger
				tr
					p Le fichier svg du pattern contient t-il plusieurs path ?
					div(class="switch")
						label
							Off
							input(type="checkbox", id="switch")
							span(class="lever")
							On
table
	tr
		td
			p espacement en X
			form(action="#")
				p(class="range-field")
					input(type="range", id="espacementX", min="0", max="100")
		td
			p espacement en Y
			form(action="#")
				p(class="range-field")
					input(type="range", id="espacementY", min="0", max="100")
	tr
		td
			p nombre de répétition en X
			form(action="#")
				p(class="range-field")
					input(type="range", id="numberX", min="0", max="50")
		td
			p nombre de répétition en Y
			form(action="#")
				p(class="range-field")
					input(type="range", id="numberY", min="0", max="50")




object(id="SVGPattern", data='/', type="image/svg+xml", style="display:none;")
object(id="SVGForm", data='/', type="image/svg+xml", style="display:none;")

script.
	var validateButton = document.getElementById( "validate" )	

	validateButton.addEventListener("click",function(){
		var inputPattern = document.getElementById( "inputPattern" )
		var inputForm = document.getElementById( "inputForm" )
		document.getElementById( "SVGPattern" ).data += inputPattern.value
		document.getElementById( "SVGForm" ).data += inputForm.value
		console.log("ok")
		console.log(document.getElementById( "SVGPattern" ).data )
		console.log(document.getElementById( "SVGForm" ).data )
		step1();
	}, false)

	tester2.loadLibrary( Intersection )
	tester2.loadLibrary( Splitting )
	var svg = SVG("shape").size(1000,500)
	//var form = svg.path( 'M 200 0 L 500 0 C 400 0 400 100 400 200 C 500 200 600 200 600 100 L 600 400 C 600 300 500 300 400 300 C 400 400 400 500 500 500 L 200 500 C 300 500 300 400 300 300 C 200 300 100 300 100 400 L 100 100 C 100 200 200 200 300 200 C 300 100 300 0 200 0 ' )
	//			        .stroke( { width : 1 } ).fill( "none" )
	function step1(){
		console.log("enter step1")
		var SVGPattern = document.getElementById( "SVGPattern" )	

		SVGPattern.addEventListener("load",function(){
			console.log("validate event step1")
			var svgDoc = SVGPattern.contentDocument
			var svgPathPattern1 = svgDoc.getElementById( "SvgjsPath1007" )
		
			//var form = svg.path( 'M 25 20 L 825 20 L 825 300 C 625 500 220 500 25 300 L 25 20' )
			//		          .stroke( { width : 1 } ).fill( "none" )
			//svg.path( 'M 0 0 C 20 10 0 20 10 30 L 40 15' ).stroke( { width : 1 } ).fill( "none" )
			path = svg.path(svgPathPattern1.getAttribute("d"))
										.stroke( { width : 0 } ).fill( "none" )
			console.log("path", path)
			step2(path);
		}, false)
	}

	function step2(path){
		console.log("path step1", path)
		var SVGForm = document.getElementById( "SVGForm" )

		SVGForm.addEventListener("load",function(){
			var svgDoc2 = SVGForm.contentDocument
			var svgPathForm = svgDoc2.getElementById( "SvgjsPath1007" )

			form = svg.path(svgPathForm.getAttribute("d"))
								.stroke( { width : 1 } ).fill( "none" )
			step3(path, form);
			console.log("path form step1", path, form)
		}, false)
	}
	function step3(path, form){
		console.log("path form step2", path, form)
		
		var generateButton = document.getElementById("generate")
		generateButton.addEventListener("click",function(){
			var espacementX = document.getElementById("espacementX")
			var espacementY = document.getElementById("espacementY")
			var numberX = document.getElementById("numberX")
			var numberY = document.getElementById("numberY")

			var X = espacementX.value
			var Y = espacementY.value
			var i = numberX.value
			var j = numberY.value
			console.log

			init(svg, form, path, X, Y, i, j);
		}, false)
	}

	function init(svg, form, path, X, Y, i, j){
		svg.clear()
		tester2.run( svg, form, path, X, Y, i, j )
		tester2.createSVG( svg )
	}
